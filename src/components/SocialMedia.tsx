import Link from 'next/link'
import clsx from 'clsx'

function LinkedinIcon(props: React.ComponentPropsWithoutRef<'svg'>) {
  return (
    <svg viewBox="0 0 24 24" aria-hidden="true" {...props}>
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M22.2234 0.076416H1.77187C0.792187 0.076416 0 0.849854 0 1.80611V22.342C0 23.2983 0.792187 24.0764 1.77187 24.0764H22.2234C23.2031 24.0764 24 23.2983 24 22.3467V1.80611C24 0.849854 23.2031 0.076416 22.2234 0.076416ZM7.12031 20.528H3.55781V9.07173H7.12031V20.528ZM5.33906 7.5108C4.19531 7.5108 3.27188 6.58736 3.27188 5.44829C3.27188 4.30923 4.19531 3.38579 5.33906 3.38579C6.47813 3.38579 7.40156 4.30923 7.40156 5.44829C7.40156 6.58267 6.47813 7.5108 5.33906 7.5108ZM20.4516 20.528H16.8937V14.9592C16.8937 13.6326 16.8703 11.9217 15.0422 11.9217C13.1906 11.9217 12.9094 13.3701 12.9094 14.8655V20.528H9.35625V9.07173H12.7687V10.6373H12.8156C13.2891 9.73736 14.4516 8.7858 16.1813 8.7858C19.7859 8.7858 20.4516 11.1577 20.4516 14.242V20.528Z"
      />
    </svg>
  )
}

function InstagramIcon(props: React.ComponentPropsWithoutRef<'svg'>) {
  return (
    <svg viewBox="0 0 24 24" aria-hidden="true" {...props}>
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M18.3952 7.09854C17.6005 7.1001 16.9543 6.45662 16.9528 5.6619C16.9512 4.86718 17.5947 4.22099 18.3898 4.21944C19.1848 4.21788 19.831 4.86173 19.8326 5.65646C19.8338 6.45118 19.1903 7.09699 18.3952 7.09854ZM12.0115 18.2374C8.60909 18.244 5.8451 15.4913 5.8385 12.0881C5.83188 8.68565 8.58536 5.92123 11.9878 5.91462C15.3909 5.90801 18.1553 8.66232 18.1619 12.0643C18.1685 15.4676 15.4143 18.2308 12.0115 18.2374ZM11.992 8.07677C9.78365 8.08066 7.99594 9.875 7.99983 12.0838C8.0041 14.293 9.79882 16.0803 12.0072 16.076C14.2164 16.0718 16.0041 14.2778 15.9998 12.0686C15.9955 9.85944 14.2008 8.0725 11.992 8.07677ZM4.1192 0.722895C4.88126 0.424292 5.75333 0.219778 7.03015 0.159514C8.31011 0.0980886 8.71872 0.084087 11.9769 0.0778686C15.2358 0.0716502 15.6444 0.0840846 16.9244 0.140849C18.2016 0.196059 19.0741 0.397465 19.8377 0.69296C20.6277 0.99739 21.298 1.4072 21.966 2.07245C22.6339 2.73847 23.0453 3.40644 23.3536 4.19532C23.6518 4.95816 23.8563 5.82948 23.917 7.1071C23.9776 8.38665 23.9924 8.79489 23.9986 12.0535C24.0048 15.3117 23.9916 15.7207 23.9356 17.0014C23.88 18.2778 23.679 19.1507 23.3835 19.9139C23.0783 20.704 22.6693 21.3743 22.004 22.0423C21.3388 22.7106 20.6701 23.1216 19.8812 23.4303C19.1184 23.7281 18.2471 23.9326 16.9702 23.9937C15.6903 24.0543 15.2817 24.0687 12.0224 24.0749C8.76459 24.0812 8.35598 24.0687 7.07605 24.0123C5.79882 23.9564 4.92597 23.7553 4.16275 23.4602C3.37271 23.1546 2.70242 22.746 2.03446 22.0804C1.36611 21.4147 0.954386 20.7464 0.646458 19.9575C0.347858 19.195 0.144107 18.3233 0.0830727 17.0469C0.0220359 15.7665 0.00765506 15.3575 0.00143906 12.0993C-0.00480094 8.84077 0.00803667 8.43253 0.0640167 7.15258C0.1204 5.87497 0.320637 5.00248 0.61613 4.23848C0.921328 3.44881 1.33035 2.7789 1.99637 2.11055C2.6616 1.44258 3.33033 1.03043 4.1192 0.722895ZM4.94154 21.4443C5.36494 21.6072 6.00023 21.8016 7.17014 21.8525C8.43607 21.9073 8.81514 21.9194 12.0185 21.9132C15.223 21.9073 15.6021 21.8937 16.8676 21.8343C18.0363 21.7786 18.6716 21.5819 19.0939 21.4171C19.6541 21.1982 20.0531 20.9365 20.4722 20.517C20.8913 20.0959 21.1506 19.6958 21.3676 19.1355C21.5309 18.7118 21.7249 18.076 21.7758 16.9061C21.8314 15.641 21.8431 15.2615 21.8368 12.0573C21.831 8.85399 21.8174 8.47452 21.7572 7.20896C21.7019 6.03981 21.5056 5.4045 21.3404 4.98265C21.1215 4.42161 20.8606 4.02347 20.4399 3.60395C20.0192 3.18443 19.6191 2.92587 19.0581 2.70892C18.6355 2.54523 17.9994 2.3516 16.8303 2.30068C15.5643 2.24507 15.1849 2.23379 11.9808 2.24002C8.77743 2.24624 8.39836 2.25906 7.13281 2.31895C5.9633 2.37454 5.32877 2.57089 4.90575 2.73614C4.34587 2.95503 3.94696 3.21514 3.52746 3.63622C3.10871 4.05729 2.84938 4.4566 2.63244 5.01803C2.46993 5.44106 2.27434 6.07714 2.2242 7.24629C2.16898 8.51223 2.15733 8.89171 2.16355 12.0951C2.16939 15.2992 2.18298 15.6787 2.24248 16.9435C2.29729 18.1134 2.49518 18.7479 2.65966 19.1713C2.87855 19.7308 3.13944 20.1297 3.55973 20.5493C3.98081 20.9672 4.38088 21.2273 4.94154 21.4443Z"
      />
    </svg>
  )
}

function StravaIcon(props: React.ComponentPropsWithoutRef<'svg'>) {
  return (
    <svg viewBox="0 0 24 24" aria-hidden="true" {...props}>
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M2 0.076416C0.895431 0.076416 0 0.971846 0 2.07642V22.0764C0 23.181 0.89543 24.0764 2 24.0764H22C23.1046 24.0764 24 23.181 24 22.0764V2.07642C24 0.971847 23.1046 0.076416 22 0.076416H2ZM12.9735 13.4474L14.5403 16.5344L16.1033 13.4474H18.4028L14.5403 21.0764L10.6748 13.4474H12.9735ZM12.9743 13.4467L10.8473 9.24817L8.72401 13.4474H5.59726L10.8473 3.07642L16.1033 13.4467H12.9743Z"
      />
    </svg>
  )
}

export const socialMediaProfiles = [
  { title: 'Linkedin', href: 'https://www.linkedin.com/in/dylancoyne/', icon: LinkedinIcon },
  { title: 'Instagram', href: 'https://www.instagram.com/dylan_coyne/', icon: InstagramIcon },
  { title: 'Strava', href: 'https://www.strava.com/athletes/3766939', icon: StravaIcon },
]

export function SocialMedia({
  className,
  invert = false,
}: {
  className?: string
  invert?: boolean
}) {
  return (
    <ul
      role="list"
      className={clsx(
        'flex gap-x-10',
        invert ? 'text-white' : 'text-neutral-950',
        className,
      )}
    >
      {socialMediaProfiles.map((socialMediaProfile) => (
        <li key={socialMediaProfile.title}>
          <Link
            href={socialMediaProfile.href}
            aria-label={socialMediaProfile.title}
            className={clsx(
              'transition',
              invert ? 'hover:text-neutral-200' : 'hover:text-neutral-700',
            )}
          >
            <socialMediaProfile.icon className="h-8 w-8 fill-current" />
          </Link>
        </li>
      ))}
    </ul>
  )
}
